[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Jesus\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Jesus\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 17.0.1)
[debug]       Load.loadUnit: plugins took 351.5093ms
[debug]       Load.loadUnit: defsScala took 0.6583ms
[debug] [Loading] Scanning directory C:\Users\Jesus\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Jesus\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 46.3145 ms
[debug]           Load.resolveProject(global-plugins) took 137.2175ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Jesus\.sbt\1.0\plugins, plugins: List(<none>))) took 241.4217ms
[debug] [Loading] Done in C:\Users\Jesus\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 336.4426ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.6317ms
[debug]     Load.loadUnit(file:/C:/Users/Jesus/.sbt/1.0/plugins/, ...) took 713.4964ms
[debug]   Load.apply: load took 1272.3094ms
[debug]   Load.apply: resolveProjects took 16.5237ms
[debug]   Load.apply: finalTransforms took 240.1178ms
[debug]   Load.apply: config.delegates took 23.4532ms
[debug]   Load.apply: Def.make(settings)... took 1973.2265ms
[debug]   Load.apply: structureIndex took 394.9302ms
[debug]   Load.apply: mkStreams took 3.7052ms
[info] loading global plugins from C:\Users\Jesus\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 10535.7552ms
[debug]                 Load.loadUnit: plugins took 146.7814ms
[debug]                 Load.loadUnit: defsScala took 0.0194ms
[debug] [Loading] Scanning directory C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.7098 ms
[debug]                     Load.resolveProject(copia-de-taller-5-plantilla-build-build) took 2.4941ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id copia-de-taller-5-plantilla-build-build, base: C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project\project, plugins: List(<none>))) took 12.3312ms
[debug] [Loading] Done in C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project\project, returning: (copia-de-taller-5-plantilla-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 17.8495ms
[debug]                 Load.loadUnit: cleanEvalClasses took 0.0263ms
[debug]               Load.loadUnit(file:/C:/Users/Jesus/Desktop/Copia%20de%20Taller%205%20-%20Plantilla/project/project/, ...) took 167.7146ms
[debug]             Load.apply: load took 175.5448ms
[debug]             Load.apply: resolveProjects took 0.1987ms
[debug]             Load.apply: finalTransforms took 42.6021ms
[debug]             Load.apply: config.delegates took 1.0813ms
[debug]             Load.apply: Def.make(settings)... took 569.5624ms
[debug]             Load.apply: structureIndex took 109.7729ms
[debug]             Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]           Load.loadUnit: plugins took 2380.9222ms
[debug]           Load.loadUnit: defsScala took 0.013ms
[debug] [Loading] Scanning directory C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project
[debug]             Load.loadUnit: mkEval took 13.1229ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 7.2066 ms
[info] loading settings for project copia-de-taller-5-plantilla-build from idea.sbt ...
[debug]               Load.resolveProject(copia-de-taller-5-plantilla-build) took 58.9807ms
[debug]             Load.loadTransitive: finalizeProject(Project(id copia-de-taller-5-plantilla-build, base: C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project, plugins: List(<none>))) took 69.2917ms
[debug] [Loading] Done in C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project, returning: (copia-de-taller-5-plantilla-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 687.0014ms
[debug]           Load.loadUnit: cleanEvalClasses took 296.3768ms
[debug]         Load.loadUnit(file:/C:/Users/Jesus/Desktop/Copia%20de%20Taller%205%20-%20Plantilla/project/, ...) took 3372.5542ms
[debug]       Load.apply: load took 3397.5313ms
[debug]       Load.apply: resolveProjects took 0.1883ms
[debug]       Load.apply: finalTransforms took 162.2959ms
[debug]       Load.apply: config.delegates took 2.0766ms
[debug]       Load.apply: Def.make(settings)... took 1042.285ms
[debug]       Load.apply: structureIndex took 255.8381ms
[debug]       Load.apply: mkStreams took 0.0041ms
[info] loading project definition from C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7503.1768ms
[debug]     Load.loadUnit: defsScala took 0.0078ms
[debug] [Loading] Scanning directory C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla
[debug]       Load.loadUnit: mkEval took 0.9027ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 61.8696 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 845.6287ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla, plugins: List(<none>))) took 913.7709ms
[debug] [Loading] Done in C:\Users\Jesus\Desktop\Copia de Taller 5 - Plantilla, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1306.5176ms
[debug]     Load.loadUnit: cleanEvalClasses took 125.4415ms
[debug]   Load.loadUnit(file:/C:/Users/Jesus/Desktop/Copia%20de%20Taller%205%20-%20Plantilla/, ...) took 8938.6168ms
[debug] Load.apply: load took 8985.5352ms
[debug] Load.apply: resolveProjects took 0.1997ms
[debug] Load.apply: finalTransforms took 111.0245ms
[debug] Load.apply: config.delegates took 2.1716ms
[debug] Load.apply: Def.make(settings)... took 1053.6206ms
[debug] Load.apply: structureIndex took 212.6024ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to Taller 5 - Problema Fuertemente Paralelo (in build file:/C:/Users/Jesus/Desktop/Copia%20de%20Taller%205%20-%20Plantilla/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 61226 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 61226, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Taller 5 - Problema Fuertemente Paralelo (in build file:/C:/Users/Jesus/Desktop/Copia%20de%20Taller%205%20-%20Plantilla/)
[debug] > Exec(idea-shell, None, None)
